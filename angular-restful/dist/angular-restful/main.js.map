{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/task.model.ts","webpack:///./src/app/task.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,wBAAwB,OAAO,gCAAgC,kBAAkB,ypBAAypB,SAAS,mBAAmB,eAAe,8XAA8X,cAAc,qO;;;;;;;;;;;;;;;;;;;ACA/mC;AACL;AACT;AAQpC;IAME,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAL5C,UAAK,GAAG,mBAAmB,CAAC;QAE5B,YAAO,GAAS,IAAI,gDAAI,EAAE,CAAC;QAE3B,gBAAW,GAAY,KAAK,CAAC;IAE7B,CAAC;IACD,+BAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IACD,0CAAmB,GAAnB;QAAA,iBAMC;QALC,IAAM,UAAU,GAAuB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QACnE,UAAU,CAAC,SAAS,CAAC,cAAI;YACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAQ,GAAR,UAAS,EAAU;QAAnB,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,mCAAiC,EAAI,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAQ,GAAR;QAAA,iBAOC;QANC,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7D,UAAU,CAAC,SAAS,CAAC,cAAI;YACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,IAAI,gDAAI,EAAE,CAAC;YAC1B,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAQ,GAAR,UAAS,IAAY;QAArB,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,qBAAW;YACrD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAE,uBAAa,IAAI,oBAAa,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,EAAnC,CAAmC,CAAC,CAAC;YACtF,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAQ,GAAR,UAAS,IAAU;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IACD,6BAAM,GAAN;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,oBAAU;YAC/D,OAAO,CAAC,GAAG,CAAC,mBAAiB,UAAY,CAAC,CAAC;YAC3C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAjDU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAOiC,yDAAW;OANjC,YAAY,CAkDxB;IAAD,mBAAC;CAAA;AAlDwB;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACe;AACT;AACF;AACA;AAc7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACnBtB;AAAA;AAAA;IAAA;IAOA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACP0C;AACO;AAMlD;IACE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,8BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,QAAQ,CAAC,CAAC;IACzC,CAAC;IACD,6BAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,CAAC,GAAG,CAAC,qBAAmB,EAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,YAAU,EAAI,CAAC,CAAC;IAC7C,CAAC;IACD,gCAAU,GAAV,UAAW,OAAO;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IACD,8BAAQ,GAAR,UAAS,QAAc;QACrB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,mBAAiB,QAAQ,CAAC,EAAI,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IACD,gCAAU,GAAV,UAAW,IAAY;QACrB,OAAO,CAAC,GAAG,CAAC,eAAa,IAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,mBAAiB,IAAM,CAAC,CAAC;IACzD,CAAC;IArBU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE0B,+DAAU;OADzB,WAAW,CAsBvB;IAAD,kBAAC;CAAA;AAtBuB;;;;;;;;;;;;;ACPxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>{{Title}}</h1>\\n<h1>New Task</h1>\\n<p> {{ newTask | json }} </p>\\n<div id=\\\"newForm\\\">\\n  <form (submit)=\\\"onSubmit()\\\">\\n  <p>Title: <input id=\\\"top\\\" class=\\\"fields\\\" type=\\\"text\\\" name=\\\"newTaskTitle\\\" [(ngModel)]=\\\"newTask.title\\\"/></p>\\n  <p>Description: <input class=\\\"fields\\\" type=\\\"text\\\" name=\\\"newTaskDescription\\\" [(ngModel)]=\\\"newTask.description\\\"/></p>\\n  <input  id=\\\"create\\\" type=\\\"submit\\\" value=\\\"Create Task\\\"/>\\n  </form>\\n</div>\\n<!-- <button (click)='getTasksFromService()'>Click to show all Tasks</button> -->\\n<div *ngIf='tasks'>\\n  <p>hello</p>\\n  <table>\\n    <tr>\\n      <th>Title</th>\\n      <th>Description</th>\\n      <th>Action</th>\\n    </tr>\\n    <tr *ngFor='let x of tasks'>\\n      <td>{{x.title}}</td>\\n      <td>{{x.description}}</td>\\n      <td><button (click)='onDelete(x)'>Delete</button>\\n          <button (click)='editForm(x)'>Edit</button></td>\\n    </tr>\\n  </table>\\n</div>\\n<!-- EDIT FORM   -->\\n<div *ngIf='toggleEddit'>\\n  <h2>Edit task</h2>\\n  <form (submit)=\\\"onEdit()\\\">\\n    <p>Title: <input id=\\\"top\\\" class=\\\"fields\\\" type=\\\"text\\\" name=\\\"newTaskTitle\\\" [(ngModel)]=\\\"newTask.title\\\" value='{{selectedTask}}'/></p>\\n    <p>Description: <input class=\\\"fields\\\" type=\\\"text\\\" name=\\\"newTaskDescription\\\" [(ngModel)]=\\\"newTask.description\\\"/></p>\\n    <input  id=\\\"create\\\" type=\\\"submit\\\" value=\\\"update Task\\\"/>\\n    </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from './task.service';\nimport { Task } from './task.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  Title = 'Restful Tasks API';\n  tasks: Task[];\n  newTask: Task = new Task();\n  selectedTask: Task;\n  toggleEddit: boolean = false;\n  constructor(private taskService: TaskService) {\n  }\n  ngOnInit() {\n    this.getTasksFromService();\n  }\n  getTasksFromService() {\n    const observable: Observable<Task[]> = this.taskService.getTasks();\n    observable.subscribe(data => {\n      this.tasks = data;\n      console.log('we got this', this.tasks);\n    });\n  }\n  showTask(id: string) {\n    console.log(`this is our id from componets ${id}`);\n    this.taskService.getTask(id).subscribe(task => {\n      console.log(task);\n      this.selectedTask = task;\n    });\n  }\n  onSubmit() {\n    const observable = this.taskService.createTask(this.newTask);\n    observable.subscribe(data => {\n      console.log('got POST data back', data);\n      this.newTask = new Task();\n      this.getTasksFromService();\n    });\n  }\n  onDelete(task: string): void {\n    this.taskService.deleteTask(task).subscribe(deletedTask => {\n      this.tasks = this.tasks.filter( taskFromArray => taskFromArray.id !== deletedTask.id);\n      this.getTasksFromService();\n    });\n  }\n  editForm(task: Task) {\n    this.selectedTask = this.selectedTask === task ? null : task;\n    this.toggleEddit = true;\n  }\n  onEdit() {\n    this.taskService.editTask(this.selectedTask).subscribe(editedTask => {\n      console.log(`deleted book: ${editedTask}`);\n      this.selectedTask = null;\n      this.getTasksFromService();\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { TaskService } from './task.service';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Task {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  completed: boolean;\r\n  createdAt: number;\r\n  updatedAt: number;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Task} from './task.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  constructor(private http: HttpClient) {\n    this.getTasks();\n  }\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>('/tasks');\n  }\n  getTask(id: string): Observable<Task> {\n    console.log(`this is the id: ${id}`);\n    return this.http.get<Task>(`/tasks/${id}`);\n  }\n  createTask(newTask) {\n    return this.http.post('/tasks', newTask);\n  }\n  editTask(editTask: Task): Observable<Task> {\n    console.log('edit task' ,editTask);\n    return this.http.put<Task>(`/tasks/update/${editTask.id}`, editTask);\n  }\n  deleteTask(task: string): Observable<Task> {\n    console.log(`deleted:  ${task}`);\n    return this.http.delete<Task>(`/tasks/delete/${task}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}